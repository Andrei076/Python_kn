"""Модуль в котором находятся три функции сортировок: сортировка методом
пузырька, сортировка методом камня и сортировка методом вставками
"""
__all__ = ["babble_sort", "babble_rock_sort", "insertion_sort"]


def babble_sort(array):
    """Сортировка пузырьком - один из самых известных алгоритмов сортировки.
    В этой сортировке последовательно сравниваются значения соседних
    элементов и меняются местами, если предыдущее число больше последующего.
    В результате элементы с меньшимм значениями остаются в начале,
    а с большими оказываются в конце списка. Из-за низкой эффективности этот
    метод считается учебным и почти не применяется.
    """
    # Определяем длину масива
    n = len(array)
    # Внешний цикл количество проходов n-1
    for i in range(n - 1):
        # Внутренний цикл двигаясь с конца проходит от n-2 до i-1
        for j in range(n - 2, i - 1, -1):
            # Меняем элементы местами
            if array[j+1] < array[j]:
                array[j], array[j + 1] = array[j + 1], array[j]
    return array


def babble_rock_sort(array):
    """Сортировка методом камня опускает самый «тяжёлый» элемент в конец
    массива
    """
    # Определяем длину массива
    length = len(array)
    # Внешний цикл, количество проходов N-1
    for i in range(length):
        # Внутренний цикл, N-i-1 проходов
        for j in range(0, length - i - 1):
            # Меняем элементы местами
            if array[j] > array[j + 1]:
                array[j], array[j + 1] = array[j + 1], array[j]
    return array


def insertion_sort(nums):
    """Сортировка вставками сегментирует список на две части: отсортированную
    и неотсортированную. Алгоритм перебирает второй сегмент и вставляет
    текущий элемент в правильную позицию первого сегмента. Предполагается,
    что первый элемент списка отсортирован.
    """
    for i in range(1, len(nums)):
        item_to_insert = nums[i]
        # Сохраняем ссылку на индекс предыдущего элемента
        j = i - 1
        # Элементы отортированного сегмента перемещаем вперед, если они больше
        # элемента для вставки
        while j >= 0 and nums[j] > item_to_insert:
            nums[j + 1] = nums[j]
            j -= 1
        # Вставляем элемент
        nums[j + 1] = item_to_insert
    return nums


if __name__ == "__main__":
    pass
